version: "3.1"
services:

  nginx:
    image: nginx:alpine
    container_name: example-nginx-dev
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/nginx/nginx-dev.conf:/etc/nginx/conf.d/default.conf
      - ./storage/logs/:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - laravel
      - mongo
      - redis

  laravel:
    image: vanbakhanh/example-laravel-dev
    build:
      context: ./
      dockerfile: docker/php-fpm/Dockerfile.dev
    container_name: example-laravel-dev
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    ports:
      - "9000:9000"

  mysql:
    image: mysql:8.0
    container_name: example-mysql-dev
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./data/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_DATABASE=example
    ports:
      - "3306:3306"

  mongo:
    image: mongo
    container_name: example-mongo-dev
    ports:
      - "27017:27017"
    volumes:
      - .:/var/www/html
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret

  mongo-express:
    image: mongo-express
    container_name: example-mongo-express-dev
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: secret
      ME_CONFIG_MONGODB_SERVER: mongo
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: example-redis-dev
